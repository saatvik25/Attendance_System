{"ast":null,"code":"var _jsxFileName = \"/Users/saatviksrivastava/Desktop/mac/attendance-system/src/components/StudentList.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// const StudentList = ({ children }) => {\n//   // You can fetch the list of students from an API or props\n//   const students = [\n//     { id: 1, name: 'Student A' },\n//     { id: 2, name: 'Student B' },\n//     // ... more students\n//   ];\n\n//   return <div>{children(students)}</div>;\n// };\n\n// export default StudentList;\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList() {\n  _s();\n  // Simulated student data (replace with API/database fetch)\n  const initialStudents = [{\n    id: 1,\n    name: 'Registration 01',\n    present: false\n  }, {\n    id: 2,\n    name: 'Registration 02',\n    present: false\n  }, {\n    id: 3,\n    name: 'Registration 03',\n    present: false\n  }, {\n    id: 4,\n    name: 'Registration 04',\n    present: false\n  }, {\n    id: 5,\n    name: 'Registration 05',\n    present: false\n  }, {\n    id: 6,\n    name: 'Registration 06',\n    present: false\n  }, {\n    id: 7,\n    name: 'Registration 07',\n    present: false\n  }, {\n    id: 8,\n    name: 'Registration 08',\n    present: false\n  }, {\n    id: 9,\n    name: 'Registration 09',\n    present: false\n  }, {\n    id: 10,\n    name: 'Registration 10',\n    present: false\n  }];\n\n  // State to store the list of students\n  const [students, setStudents] = useState(initialStudents);\n\n  // Function to handle marking attendance\n  const handleMarkAttendance = studentId => {\n    setStudents(prevStudents => prevStudents.map(student => student.id === studentId ? {\n      ...student,\n      present: !student.present\n    } : student));\n  };\n  useEffect(() => {\n    // Here, you can make an API/database request to fetch the list of students\n    // and update the 'students' state with the fetched data.\n    // For simplicity, we're using static data.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), students.map(student => /*#__PURE__*/_jsxDEV(StudentCard, {\n      student: student,\n      onMarkAttendance: handleMarkAttendance\n    }, student.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentList, \"tnn7WJcapmhTo1IlnkoRgsd5IT0=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","StudentCard","jsxDEV","_jsxDEV","StudentList","_s","initialStudents","id","name","present","students","setStudents","handleMarkAttendance","studentId","prevStudents","map","student","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMarkAttendance","_c","$RefreshReg$"],"sources":["/Users/saatviksrivastava/Desktop/mac/attendance-system/src/components/StudentList.js"],"sourcesContent":["// import React from 'react';\n\n// const StudentList = ({ children }) => {\n//   // You can fetch the list of students from an API or props\n//   const students = [\n//     { id: 1, name: 'Student A' },\n//     { id: 2, name: 'Student B' },\n//     // ... more students\n//   ];\n\n//   return <div>{children(students)}</div>;\n// };\n\n// export default StudentList;\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\n\nfunction StudentList() {\n  // Simulated student data (replace with API/database fetch)\n  const initialStudents = [\n    { id: 1, name: 'Registration 01', present: false },\n    { id: 2, name: 'Registration 02', present: false },\n    { id: 3, name: 'Registration 03', present: false },\n    { id: 4, name: 'Registration 04', present: false },\n    { id: 5, name: 'Registration 05', present: false },\n    { id: 6, name: 'Registration 06', present: false },\n    { id: 7, name: 'Registration 07', present: false },\n    { id: 8, name: 'Registration 08', present: false },\n    { id: 9, name: 'Registration 09', present: false },\n    { id: 10, name: 'Registration 10', present: false }\n  ];\n\n  // State to store the list of students\n  const [students, setStudents] = useState(initialStudents);\n\n  // Function to handle marking attendance\n  const handleMarkAttendance = (studentId) => {\n    setStudents((prevStudents) =>\n      prevStudents.map((student) =>\n        student.id === studentId ? { ...student, present: !student.present } : student\n      )\n    );\n  };\n\n  useEffect(() => {\n    // Here, you can make an API/database request to fetch the list of students\n    // and update the 'students' state with the fetched data.\n    // For simplicity, we're using static data.\n  }, []);\n\n  return (\n    <div className=\"student-list\">\n      <h2>Student List</h2>\n      {students.map((student) => (\n        <StudentCard\n          key={student.id}\n          student={student}\n          onMarkAttendance={handleMarkAttendance}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default StudentList;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA,MAAMC,eAAe,GAAG,CACtB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,EAClD;IAAEF,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAM,CAAC,CACpD;;EAED;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACO,eAAe,CAAC;;EAEzD;EACA,MAAMM,oBAAoB,GAAIC,SAAS,IAAK;IAC1CF,WAAW,CAAEG,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,OAAO,IACvBA,OAAO,CAACT,EAAE,KAAKM,SAAS,GAAG;MAAE,GAAGG,OAAO;MAAEP,OAAO,EAAE,CAACO,OAAO,CAACP;IAAQ,CAAC,GAAGO,OACzE,CACF,CAAC;EACH,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEG,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBZ,QAAQ,CAACK,GAAG,CAAEC,OAAO,iBACpBb,OAAA,CAACF,WAAW;MAEVe,OAAO,EAAEA,OAAQ;MACjBO,gBAAgB,EAAEX;IAAqB,GAFlCI,OAAO,CAACT,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CA7CQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA+CpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}